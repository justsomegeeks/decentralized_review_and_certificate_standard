/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Course } from "../Course";

export class Course__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Course> {
    return super.deploy(overrides || {}) as Promise<Course>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Course {
    return super.attach(address) as Course;
  }
  connect(signer: Signer): Course__factory {
    return super.connect(signer) as Course__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Course {
    return new Contract(address, _abi, signerOrProvider) as Course;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkelProof",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseCID",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCourseCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_cid",
        type: "string",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_courseCID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b5d806100206000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631ece873614610072578063715018a61461009b5780637ab4339d146100a55780638d8637d7146100b85780638da5cb5b146100cd578063c9266029146100e2578063f2fde38b146100f5575b600080fd5b6100856100803660046107ac565b610108565b604051610092919061095e565b60405180910390f35b6100a361015f565b005b6100a36100b33660046108a6565b6101aa565b6100c0610246565b6040516100929190610982565b6100d56102d8565b604051610092919061094a565b6100a36100f0366004610862565b6102e7565b6100a361010336600461078b565b610383565b6000818152606660205260408120805482919061012490610aaf565b90501161014c5760405162461bcd60e51b815260040161014390610995565b60405180910390fd5b6101578483856103f4565b949350505050565b6101676104af565b6001600160a01b03166101786102d8565b6001600160a01b03161461019e5760405162461bcd60e51b815260040161014390610a51565b6101a860006104b3565b565b600054610100900460ff16806101c3575060005460ff16155b6101df5760405162461bcd60e51b815260040161014390610a03565b600054610100900460ff1615801561020a576000805460ff1961ff0019909116610100171660011790555b825161021d90606590602086019061066c565b50610226610505565b61022f82610383565b8015610241576000805461ff00191690555b505050565b60606065805461025590610aaf565b80601f016020809104026020016040519081016040528092919081815260200182805461028190610aaf565b80156102ce5780601f106102a3576101008083540402835291602001916102ce565b820191906000526020600020905b8154815290600101906020018083116102b157829003601f168201915b5050505050905090565b6033546001600160a01b031690565b6102ef6104af565b6001600160a01b03166103006102d8565b6001600160a01b0316146103265760405162461bcd60e51b815260040161014390610a51565b600082815260666020908152604090912082516103459284019061066c565b507fae89b4db598fa98bf543752d875a8cd4b01adc0b551673cf5d4ff6618f08411d8282604051610377929190610969565b60405180910390a15050565b61038b6104af565b6001600160a01b031661039c6102d8565b6001600160a01b0316146103c25760405162461bcd60e51b815260040161014390610a51565b6001600160a01b0381166103e85760405162461bcd60e51b8152600401610143906109bd565b6103f1816104b3565b50565b600081815b85518110156104a457600086828151811061042457634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161046557828160405160200161044892919061093c565b604051602081830303815290604052805190602001209250610491565b808360405160200161047892919061093c565b6040516020818303038152906040528051906020012092505b508061049c81610aea565b9150506103f9565b509092149392505050565b3390565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff168061051e575060005460ff16155b61053a5760405162461bcd60e51b815260040161014390610a03565b600054610100900460ff16158015610565576000805460ff1961ff0019909116610100171660011790555b61056d610589565b6105756105fc565b80156103f1576000805461ff001916905550565b600054610100900460ff16806105a2575060005460ff16155b6105be5760405162461bcd60e51b815260040161014390610a03565b600054610100900460ff16158015610575576000805460ff1961ff00199091166101001716600117905580156103f1576000805461ff001916905550565b600054610100900460ff1680610615575060005460ff16155b6106315760405162461bcd60e51b815260040161014390610a03565b600054610100900460ff1615801561065c576000805460ff1961ff0019909116610100171660011790555b6105756106676104af565b6104b3565b82805461067890610aaf565b90600052602060002090601f01602090048101928261069a57600085556106e0565b82601f106106b357805160ff19168380011785556106e0565b828001600101855582156106e0579182015b828111156106e05782518255916020019190600101906106c5565b506106ec9291506106f0565b5090565b5b808211156106ec57600081556001016106f1565b80356001600160a01b038116811461071c57600080fd5b919050565b600082601f830112610731578081fd5b81356001600160401b0381111561074a5761074a610b11565b61075d601f8201601f1916602001610a86565b818152846020838601011115610771578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561079c578081fd5b6107a582610705565b9392505050565b6000806000606084860312156107c0578182fd5b83356001600160401b03808211156107d6578384fd5b818601915086601f8301126107e9578384fd5b81356020828211156107fd576107fd610b11565b808202925061080d818401610a86565b8281528181019085830185870184018c1015610827578889fd5b8896505b8487101561084957803583526001969096019591830191830161082b565b509a918901359950506040909701359695505050505050565b60008060408385031215610874578182fd5b8235915060208301356001600160401b03811115610890578182fd5b61089c85828601610721565b9150509250929050565b600080604083850312156108b8578182fd5b82356001600160401b038111156108cd578283fd5b6108d985828601610721565b9250506108e860208401610705565b90509250929050565b60008151808452815b81811015610916576020818501810151868301820152016108fa565b818111156109275782602083870101525b50601f01601f19169290920160200192915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b901515815260200190565b60008382526040602083015261015760408301846108f1565b6000602082526107a560208301846108f1565b6020808252600e908201526d149bdbdd081b9bdd08199bdd5b9960921b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040518181016001600160401b0381118282101715610aa757610aa7610b11565b604052919050565b600281046001821680610ac357607f821691505b60208210811415610ae457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610b0a57634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220f99205cbe4d6d4376484de532f0cff1151278800ffa726e327053980b38f89f964736f6c63430008000033";
