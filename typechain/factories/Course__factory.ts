/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Course } from "../Course";

export class Course__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Course> {
    return super.deploy(overrides || {}) as Promise<Course>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Course {
    return super.attach(address) as Course;
  }
  connect(signer: Signer): Course__factory {
    return super.connect(signer) as Course__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Course {
    return new Contract(address, _abi, signerOrProvider) as Course;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkelProof",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseCID",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCourseCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_cid",
        type: "string",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_courseCID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b610085565b3390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6109f4806100946000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80631ece873614610072578063715018a61461009b5780637ab4339d146100a55780638d8637d7146100b85780638da5cb5b146100cd578063c9266029146100e2578063f2fde38b146100f5575b600080fd5b610085610080366004610643565b610108565b60405161009291906107f5565b60405180910390f35b6100a361015f565b005b6100a36100b336600461073d565b6101aa565b6100c0610235565b6040516100929190610819565b6100d56102c7565b60405161009291906107e1565b6100a36100f03660046106f9565b6102dc565b6100a3610103366004610622565b610378565b6000818152600260205260408120805482919061012490610946565b90501161014c5760405162461bcd60e51b81526004016101439061082c565b60405180910390fd5b6101578483856103e9565b949350505050565b6101676104a4565b6001600160a01b03166101786102c7565b6001600160a01b03161461019e5760405162461bcd60e51b8152600401610143906108e8565b6101a860006104a8565b565b600054610100900460ff16806101c3575060005460ff16155b6101df5760405162461bcd60e51b81526004016101439061089a565b600054610100900460ff1615801561020a576000805460ff1961ff0019909116610100171660011790555b825161021d906001906020860190610503565b508015610230576000805461ff00191690555b505050565b60606001805461024490610946565b80601f016020809104026020016040519081016040528092919081815260200182805461027090610946565b80156102bd5780601f10610292576101008083540402835291602001916102bd565b820191906000526020600020905b8154815290600101906020018083116102a057829003601f168201915b5050505050905090565b6000546201000090046001600160a01b031690565b6102e46104a4565b6001600160a01b03166102f56102c7565b6001600160a01b03161461031b5760405162461bcd60e51b8152600401610143906108e8565b6000828152600260209081526040909120825161033a92840190610503565b507fae89b4db598fa98bf543752d875a8cd4b01adc0b551673cf5d4ff6618f08411d828260405161036c929190610800565b60405180910390a15050565b6103806104a4565b6001600160a01b03166103916102c7565b6001600160a01b0316146103b75760405162461bcd60e51b8152600401610143906108e8565b6001600160a01b0381166103dd5760405162461bcd60e51b815260040161014390610854565b6103e6816104a8565b50565b600081815b855181101561049957600086828151811061041957634e487b7160e01b600052603260045260246000fd5b6020026020010151905080831161045a57828160405160200161043d9291906107d3565b604051602081830303815290604052805190602001209250610486565b808360405160200161046d9291906107d3565b6040516020818303038152906040528051906020012092505b508061049181610981565b9150506103ee565b509092149392505050565b3390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b82805461050f90610946565b90600052602060002090601f0160209004810192826105315760008555610577565b82601f1061054a57805160ff1916838001178555610577565b82800160010185558215610577579182015b8281111561057757825182559160200191906001019061055c565b50610583929150610587565b5090565b5b808211156105835760008155600101610588565b80356001600160a01b03811681146105b357600080fd5b919050565b600082601f8301126105c8578081fd5b81356001600160401b038111156105e1576105e16109a8565b6105f4601f8201601f191660200161091d565b818152846020838601011115610608578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610633578081fd5b61063c8261059c565b9392505050565b600080600060608486031215610657578182fd5b83356001600160401b038082111561066d578384fd5b818601915086601f830112610680578384fd5b8135602082821115610694576106946109a8565b80820292506106a481840161091d565b8281528181019085830185870184018c10156106be578889fd5b8896505b848710156106e05780358352600196909601959183019183016106c2565b509a918901359950506040909701359695505050505050565b6000806040838503121561070b578182fd5b8235915060208301356001600160401b03811115610727578182fd5b610733858286016105b8565b9150509250929050565b6000806040838503121561074f578182fd5b82356001600160401b03811115610764578283fd5b610770858286016105b8565b92505061077f6020840161059c565b90509250929050565b60008151808452815b818110156107ad57602081850181015186830182015201610791565b818111156107be5782602083870101525b50601f01601f19169290920160200192915050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b901515815260200190565b6000838252604060208301526101576040830184610788565b60006020825261063c6020830184610788565b6020808252600e908201526d149bdbdd081b9bdd08199bdd5b9960921b604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040518181016001600160401b038111828210171561093e5761093e6109a8565b604052919050565b60028104600182168061095a57607f821691505b6020821081141561097b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156109a157634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d74e49baafec8863b31993cffde6b25bb381ce8673bd0c39c353c28fc23622e764736f6c63430008000033";
